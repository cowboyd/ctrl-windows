name: Test

on:
  pull_request:
    branches:
      - "v[0-9]+"

jobs:
  test:
    runs-on: ${{ matrix.platform }}
    name: ${{ matrix.platform }} test node@${{ matrix.node-version }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest]
        node-version: ["14", "16", "18"]
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.63
      - uses: actions/checkout@v2
      - run: yarn install
      - run: yarn build
      # specifically running this after build
      # using the n-api, the default node on github actions
      # should build a .node that works in any of the node
      # versions that we have specified in the matrix
      - uses: volta-cli/action@v1
        with:
          node-version: ${{ matrix.node-version }}
          yarn-version: 1.22.19
      - run: yarn test

  effection-smoke-test:
    runs-on: ${{ matrix.platform }}
    name: test effection linked - ${{ matrix.platform }} node@${{ matrix.node-version }}
    timeout: 30
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest]
        node-version: ["14", "16", "18"]

    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      # checkout and setup ctrlc-windows
      - uses: actions/checkout@v2
        with:
          path: ctrlc-windows
      - run: yarn install --ignore-scripts
        working-directory: ctrlc-windows
      - run: yarn build
        working-directory: ctrlc-windows
      - run: yarn link
        working-directory: ctrlc-windows
      - uses: volta-cli/action@v1
        with:
          node-version: ${{ matrix.node-version }}
          yarn-version: 1.22.19
      # checkout and setup effection then run tests
      - uses: actions/checkout@v2
        with:
          path: effection
          repository: thefrontside/effection
      - run: yarn install
        working-directory: effection
      - run: yarn link ctrlc-windows
        working-directory: effection
      - run: yarn prepack
        working-directory: effection
      - run: yarn test
        working-directory: effection
        shell: bash
